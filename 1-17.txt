⚫️課題1−17
①オブジェクト指向とはどんな考え方ですか？
効率よく開発するための考え方の１つです。オブジェクト＝物であり、物がどんな見た目か説明したり、その物がどんな動きするのか説明することがプロパティやメソッドにあたります。

②オブジェクト思考的な開発を効率よく行うための3つの要素は何ですか？
１．プログラムの独立性
２．プログラムの再利用性
３．プログラムの拡張性

③ 現場で利用される共通部品などは上記のどの要素を当てはまりますか？
２．プログラムの再利用性

④プログラミングはなぜ独立している方が良いのですか？
もし、それぞれのプログラムが依存関係にある場合、１つのプログラムに修正が入ると、他のプログラムにも影響が出てしまうのでそれらも修正をしなければいけなくなり、無限ループに修正し続ける必要が出てくる可能性があります。そのため、プログラムは独立していればしているほどいいのです。

⑤Javaの継承とは何ですか？
クラスの中身である変数やメソッドを他のクラスに受け継がせることです。共通の項目・性質を持っている場合、新たにすべてを１から書くことも可能ですが、それだとコードが膨大になり。効率もよくありません。継承を使い、共通の項目・性質をもった複数のクラスを作るのが良いです。

⑥ポリモーフィズムのメリットは何ですか？2つ上げなさい
１．コードがきれいになる
２・重複したメソッドの変更にも柔軟に対応することができる

⑦コンストラクタとは何ですか？
クラスの処理を実行するためにインスタンスを生成する際に実行される機能です。インスタンスを生成する場合「new」を使いますが、この「new」を実行した際にコンストラクタの機能が呼び出されます。クラスで利用される値を保存するメンバ変数を初期化するための処理が頻繁に記述されます。引数を渡すことも可能です。
例えば、
 // 引数なし
 public ClassA() {
 // 処理を記述 
 } 
 
 // 引数あり
 public ClassA(String str) {
   // メンバ変数に引数の値を設定
   sample1 = str;
 }
上記にように、同名のコンストラクタを作成することも可能（オーバーロード）


⑧カプセル化とは何ですか？
データと実装を隠蔽することを言います。カプセル化は、アクセス修飾子を適切に設定することで、「フィールド」や「メソッド」へ外部プログラムからのアクセスを制限するために利用されます。
クラスをカプセル化することにより、クラス毎の独立性が高まり、想定しない操作をされないよう制御することが可能です。